Verifying knowledge assertions
Verifying for generic connector
  Verifying when ALL participants are honest
Verification failed:
  when ALL participants are honest
  of theorem: assert
  msg: "balance zero at application exit"
  at ./index-bad.rsh:45:11:application

  // Violation Witness

  const wager/18 = "Alice".interact.wager;
  //    ^ could = 2
  //      from: ./index-bad.rsh:16:17:application
  const handA/23 = "Alice".interact.getHand();
  //    ^ could = 2
  //      from: ./index-bad.rsh:20:50:application


  // Theorem Formalization

  const outcome/42 = (handA/23 + (4 - ((handA/23 + 1) % 3))) % 3;
  //    ^ would be 0
  const v53 = (outcome/42 == 0) ? [0, 1 ] : (outcome/42 == 1) ? [1, 1 ] : [2, 0 ];
  //    ^ would be [0, 1 ]
  const v73 = 0 == (((wager/18 + wager/18) - (v53[0] * wager/18)) - (v53[1] * wager/18));
  //    ^ would be false
  assert(v73);

  Verifying when NO participants are honest
Verification failed:
  when NO participants are honest
  of theorem: assert
  msg: "balance zero at application exit"
  at ./index-bad.rsh:45:11:application

  (details omitted on repeat)
  Verifying when ONLY "Alice" is honest
Verification failed:
  when ONLY "Alice" is honest
  of theorem: assert
  msg: "balance zero at application exit"
  at ./index-bad.rsh:45:11:application

  (details omitted on repeat)
  Verifying when ONLY "Bob" is honest
Verification failed:
  when ONLY "Bob" is honest
  of theorem: assert
  msg: "balance zero at application exit"
  at ./index-bad.rsh:45:11:application

  (details omitted on repeat)
Checked 23 theorems; 4 failures. :'(
