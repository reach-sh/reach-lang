Verifying knowledge assertions
Verifying for generic connector
  Verifying when ALL participants are honest
Verification failed:
  when ALL participants are honest
  of theorem: assert
  msg: "balance sufficient for transfer"
  at ./index-tokinv.rsh:39:28:application
  at /app/index-tokinv.rsh:36:47:application call to [unknown function] (defined at: /app/index-tokinv.rsh:36:47:function exp)

  // Violation Witness

  const UInt.max = 73349;

  const tokenInfos/676 = <loop variable>;
  //    ^ could = Array.const(Tuple(UInt, UInt, Bool), [0, 8855, false ] )
  //      from: ./index-tokinv.rsh:27:45:while

  // Theorem Formalization

  const v822 = 1 <= tokenInfos/676[0][0];
  //    ^ would be false
  assert(v822);

Verification failed:
  when ALL participants are honest
  of theorem: assert
  msg: "balance zero at application exit"
  at ./index-tokinv.rsh:56:7:application

  // Violation Witness

  const UInt.max = 1;

  const tokenInfos/676 = <loop variable>;
  //    ^ could = Array.const(Tuple(UInt, UInt, Bool), [1, 11797, false ] )
  //      from: ./index-tokinv.rsh:27:45:while

  // Theorem Formalization

  const v960 = 0 == tokenInfos/676[0][0];
  //    ^ would be false
  assert(v960);

  Verifying when NO participants are honest
Checked 68 theorems; 5 failures (and 3 omitted repeats) :'(

For a guide to understanding verification failures, see: https://docs.reach.sh/rsh/errors/#how-to-read-verification-failures
