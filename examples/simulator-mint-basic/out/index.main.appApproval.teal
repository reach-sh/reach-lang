#pragma version 5
int 0
store 0 // GV_txnCounter :: UInt
txn ApplicationID
bz alloc
byte base64()
app_global_get
dup
int 0
extract_uint64
store 1 // GV_currentStep :: UInt
int 8
extract_uint64
store 2 // GV_currentTime :: UInt
txna ApplicationArgs 0
btoi
preamble:
dup
bz publish
api:
int 0
store 4 // GV_argTime :: UInt
int 1
store 6 // GV_wasMeth :: Bool
err
publish:
txna ApplicationArgs 1
btoi
txna ApplicationArgs 2
btoi
store 4 // GV_argTime :: UInt
txna ApplicationArgs 3
store 5 // GV_argMsg :: Null
dup
int 5
<
bnz l0_publish_lt_5
dup
int 7
<
bnz l1_publish_lt_7
dup
int 8
<
bnz l2_publish_lt_8
dup
int 9
<
bnz l3_publish_lt_9
int 9
==
assert

  // { publish9
  publish9:
  // check step
  int 9
  load 1 // GV_currentStep :: UInt
  ==
  assert
  // check time
  load 4 // GV_argTime :: UInt
  dup
  int 0
  ==
  swap
  load 2 // GV_currentTime :: UInt
  ==
  ||
  assert
  byte base64(AA==)
  app_global_get
  dup
  store 3 // GV_svs :: Null
  int 32
  extract_uint64
  store 255 // v265 :: UInt
  load 3 // GV_svs :: Null
  int 40
  extract_uint64
  store 254 // v315 :: Token
  byte base64(ogVmjg==)
  log // up to 4 bytes
  // ^ CheckPay
  // at ./index.rsh:72:5:dot

    // { l4_checkTxnK
    load 255 // v265 :: UInt
    dup
    bz l4_checkTxnK
    load 0 // GV_txnCounter :: UInt
    dup
    int 1
    +
    store 0 // GV_txnCounter :: UInt
    swap
    dig 1
    gtxns AssetAmount
    ==
    assert
    load 254 // v315 :: Token
    dig 1
    gtxns XferAsset
    ==
    assert
    int axfer
    dig 1
    gtxns TypeEnum
    ==
    assert
    global CurrentApplicationAddress
    dig 1
    gtxns AssetReceiver
    ==
    assert
    l4_checkTxnK:
    pop
    // l4_checkTxnK }

  // ^ CheckPay
  // at ./index.rsh:72:5:dot
  load 3 // GV_svs :: Null
  extract 0 32
  txn Sender
  ==
  assert
  // ^ Claim: sender correct
  // at ./index.rsh:72:5:dot
  itxn_begin
  int acfg
  itxn_field TypeEnum
  load 254 // v315 :: Token
  itxn_field ConfigAsset
  itxn_submit

    // { l5_makeTxnK
    int 0
    itxn_begin
    itxn_field Amount
    int pay
    itxn_field TypeEnum
    global CreatorAddress
    itxn_field CloseRemainderTo
    global CurrentApplicationAddress
    itxn_field Receiver
    itxn_submit
    int 0
    l5_makeTxnK:
    pop
    // l5_makeTxnK }

  txn OnCompletion
  int DeleteApplication
  ==
  assert
  b updateState
  // publish9 }

l3_publish_lt_9:
pop

  // { publish8
  publish8:
  // check step
  int 8
  load 1 // GV_currentStep :: UInt
  ==
  assert
  // check time
  load 4 // GV_argTime :: UInt
  dup
  int 0
  ==
  swap
  load 2 // GV_currentTime :: UInt
  ==
  ||
  assert
  byte base64(AA==)
  app_global_get
  dup
  store 3 // GV_svs :: Null
  extract 32 32
  store 255 // v254 :: Address
  load 3 // GV_svs :: Null
  int 64
  extract_uint64
  store 254 // v265 :: UInt
  load 3 // GV_svs :: Null
  int 72
  extract_uint64
  store 253 // v315 :: Token
  byte base64(F/zbLg==)
  log // up to 4 bytes
  // ^ CheckPay
  // at ./index.rsh:70:5:dot
  load 3 // GV_svs :: Null
  int 80
  extract_uint64
  load 254 // v265 :: UInt
  +
  store 252 // v358 :: UInt

    // { l6_checkTxnK
    load 254 // v265 :: UInt
    dup
    bz l6_checkTxnK
    load 0 // GV_txnCounter :: UInt
    dup
    int 1
    +
    store 0 // GV_txnCounter :: UInt
    swap
    dig 1
    gtxns AssetAmount
    ==
    assert
    load 253 // v315 :: Token
    dig 1
    gtxns XferAsset
    ==
    assert
    int axfer
    dig 1
    gtxns TypeEnum
    ==
    assert
    global CurrentApplicationAddress
    dig 1
    gtxns AssetReceiver
    ==
    assert
    l6_checkTxnK:
    pop
    // l6_checkTxnK }

  // ^ CheckPay
  // at ./index.rsh:70:5:dot
  load 3 // GV_svs :: Null
  extract 0 32
  txn Sender
  ==
  assert
  // ^ Claim: sender correct
  // at ./index.rsh:70:5:dot
  load 255 // v254 :: Address
  load 254 // v265 :: UInt
  itob
  concat
  load 253 // v315 :: Token
  itob
  concat
  load 252 // v358 :: UInt
  itob
  concat
  byte base64(AA==)
  dig 1
  extract 0 56
  app_global_put
  pop
  int 9
  store 1 // GV_currentStep :: UInt
  global Round
  store 2 // GV_currentTime :: UInt
  txn OnCompletion
  int NoOp
  ==
  assert
  b updateState
  // publish8 }

l2_publish_lt_8:
pop

  // { publish7
  publish7:
  // check step
  int 7
  load 1 // GV_currentStep :: UInt
  ==
  assert
  // check time
  load 4 // GV_argTime :: UInt
  dup
  int 0
  ==
  swap
  load 2 // GV_currentTime :: UInt
  ==
  ||
  assert
  byte base64(AA==)
  app_global_get
  dup
  store 3 // GV_svs :: Null
  extract 0 32
  store 255 // v236 :: Address
  load 3 // GV_svs :: Null
  extract 32 32
  store 254 // v254 :: Address
  load 3 // GV_svs :: Null
  int 64
  extract_uint64
  store 253 // v265 :: UInt
  load 3 // GV_svs :: Null
  int 72
  extract_uint64
  store 252 // v315 :: Token
  byte base64(4huzqQ==)
  log // up to 4 bytes
  // ^ CheckPay
  // at ./index.rsh:66:5:dot
  load 255 // v236 :: Address
  txn Sender
  ==
  assert
  // ^ Claim: sender correct
  // at ./index.rsh:66:5:dot
  load 3 // GV_svs :: Null
  int 80
  extract_uint64
  load 253 // v265 :: UInt
  -
  store 251 // v341 :: UInt

    // { l7_makeTxnK
    load 253 // v265 :: UInt
    dup
    bz l7_makeTxnK
    itxn_begin
    itxn_field AssetAmount
    int axfer
    itxn_field TypeEnum
    load 255 // v236 :: Address
    itxn_field AssetReceiver
    load 252 // v315 :: Token
    itxn_field XferAsset
    itxn_submit
    int 0
    l7_makeTxnK:
    pop
    // l7_makeTxnK }

  load 251 // v341 :: UInt
  dup
  -
  store 250 // v348 :: UInt
  load 255 // v236 :: Address
  load 254 // v254 :: Address
  concat
  load 253 // v265 :: UInt
  itob
  concat
  load 252 // v315 :: Token
  itob
  concat
  load 250 // v348 :: UInt
  itob
  concat
  byte base64(AA==)
  dig 1
  extract 0 88
  app_global_put
  pop
  int 8
  store 1 // GV_currentStep :: UInt
  global Round
  store 2 // GV_currentTime :: UInt
  txn OnCompletion
  int NoOp
  ==
  assert
  b updateState
  // publish7 }

l1_publish_lt_7:
dup
int 6
<
bnz l8_publish_lt_6
pop

  // { publish6
  publish6:
  // check step
  int 6
  load 1 // GV_currentStep :: UInt
  ==
  assert
  // check time
  load 4 // GV_argTime :: UInt
  dup
  int 0
  ==
  swap
  load 2 // GV_currentTime :: UInt
  ==
  ||
  assert
  byte base64(AA==)
  app_global_get
  dup
  store 3 // GV_svs :: Null
  extract 0 32
  store 255 // v236 :: Address
  load 3 // GV_svs :: Null
  extract 32 32
  store 254 // v254 :: Address
  load 3 // GV_svs :: Null
  int 64
  extract_uint64
  store 253 // v265 :: UInt
  load 3 // GV_svs :: Null
  int 72
  extract_uint64
  store 252 // v315 :: Token
  byte base64(YbSsDA==)
  log // up to 4 bytes
  // ^ CheckPay
  // at ./index.rsh:63:5:dot
  load 254 // v254 :: Address
  txn Sender
  ==
  assert
  // ^ Claim: sender correct
  // at ./index.rsh:63:5:dot
  int 18446744073709551615
  load 253 // v265 :: UInt
  -
  store 251 // v329 :: UInt

    // { l9_makeTxnK
    load 253 // v265 :: UInt
    dup
    bz l9_makeTxnK
    itxn_begin
    itxn_field AssetAmount
    int axfer
    itxn_field TypeEnum
    load 254 // v254 :: Address
    itxn_field AssetReceiver
    load 252 // v315 :: Token
    itxn_field XferAsset
    itxn_submit
    int 0
    l9_makeTxnK:
    pop
    // l9_makeTxnK }

  load 255 // v236 :: Address
  load 254 // v254 :: Address
  concat
  load 253 // v265 :: UInt
  itob
  concat
  load 252 // v315 :: Token
  itob
  concat
  load 251 // v329 :: UInt
  itob
  concat
  byte base64(AA==)
  dig 1
  extract 0 88
  app_global_put
  pop
  int 7
  store 1 // GV_currentStep :: UInt
  global Round
  store 2 // GV_currentTime :: UInt
  txn OnCompletion
  int NoOp
  ==
  assert
  b updateState
  // publish6 }

l8_publish_lt_6:
pop

  // { publish5
  publish5:
  // check step
  int 5
  load 1 // GV_currentStep :: UInt
  ==
  assert
  // check time
  load 4 // GV_argTime :: UInt
  dup
  int 0
  ==
  swap
  load 2 // GV_currentTime :: UInt
  ==
  ||
  assert
  byte base64(AA==)
  app_global_get
  byte base64(AQ==)
  app_global_get
  concat
  dup
  store 3 // GV_svs :: Null
  extract 0 32
  store 255 // v236 :: Address
  load 3 // GV_svs :: Null
  int 80
  extract_uint64
  store 254 // v251 :: Token
  load 3 // GV_svs :: Null
  extract 88 32
  store 253 // v254 :: Address
  load 3 // GV_svs :: Null
  int 120
  extract_uint64
  store 252 // v265 :: UInt
  byte base64(zJmSXA==)
  log // up to 4 bytes
  // ^ CheckPay
  // at ./index.rsh:53:5:dot

    // { l10_checkTxnK
    load 252 // v265 :: UInt
    dup
    bz l10_checkTxnK
    load 0 // GV_txnCounter :: UInt
    dup
    int 1
    +
    store 0 // GV_txnCounter :: UInt
    swap
    dig 1
    gtxns AssetAmount
    ==
    assert
    load 254 // v251 :: Token
    dig 1
    gtxns XferAsset
    ==
    assert
    int axfer
    dig 1
    gtxns TypeEnum
    ==
    assert
    global CurrentApplicationAddress
    dig 1
    gtxns AssetReceiver
    ==
    assert
    l10_checkTxnK:
    pop
    // l10_checkTxnK }

  // ^ CheckPay
  // at ./index.rsh:53:5:dot
  load 253 // v254 :: Address
  txn Sender
  ==
  assert
  // ^ Claim: sender correct
  // at ./index.rsh:53:5:dot
  itxn_begin
  int acfg
  itxn_field TypeEnum
  load 254 // v251 :: Token
  itxn_field ConfigAsset
  itxn_submit

    // { TokenNew

      // { l11_checkTxnK
      int 100000
      dup
      bz l11_checkTxnK
      load 0 // GV_txnCounter :: UInt
      dup
      int 1
      +
      store 0 // GV_txnCounter :: UInt
      swap
      dig 1
      gtxns Amount
      ==
      assert
      int pay
      dig 1
      gtxns TypeEnum
      ==
      assert
      global CurrentApplicationAddress
      dig 1
      gtxns Receiver
      ==
      assert
      l11_checkTxnK:
      pop
      // l11_checkTxnK }

    itxn_begin
    int acfg
    itxn_field TypeEnum
    int 18446744073709551615
    itxn_field ConfigAssetTotal
    int 6
    itxn_field ConfigAssetDecimals
    load 3 // GV_svs :: Null
    extract 64 8
    itxn_field ConfigAssetUnitName
    load 3 // GV_svs :: Null
    extract 32 32
    itxn_field ConfigAssetName
    byte base64(AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA)
    itxn_field ConfigAssetURL
    global ZeroAddress
    itxn_field ConfigAssetMetadataHash
    global CurrentApplicationAddress
    itxn_field ConfigAssetManager
    itxn_submit
    itxn CreatedAssetID
    // TokenNew }

  store 251 // v314 :: Token
  byte base64(AAAAAAAAATo=)
  load 251 // v314 :: Token
  itob
  concat
  log // up to 16 bytes
  load 251 // v314 :: Token
  store 250 // v315 :: Token
  load 255 // v236 :: Address
  load 253 // v254 :: Address
  concat
  load 252 // v265 :: UInt
  itob
  concat
  load 250 // v315 :: Token
  itob
  concat
  byte base64(AA==)
  dig 1
  extract 0 80
  app_global_put
  pop
  int 6
  store 1 // GV_currentStep :: UInt
  global Round
  store 2 // GV_currentTime :: UInt
  txn OnCompletion
  int NoOp
  ==
  assert
  b updateState
  // publish5 }

l0_publish_lt_5:
dup
int 2
<
bnz l12_publish_lt_2
dup
int 3
<
bnz l13_publish_lt_3
dup
int 4
<
bnz l14_publish_lt_4
pop

  // { publish4
  publish4:
  // check step
  int 4
  load 1 // GV_currentStep :: UInt
  ==
  assert
  // check time
  load 4 // GV_argTime :: UInt
  dup
  int 0
  ==
  swap
  load 2 // GV_currentTime :: UInt
  ==
  ||
  assert
  byte base64(AA==)
  app_global_get
  byte base64(AQ==)
  app_global_get
  concat
  dup
  store 3 // GV_svs :: Null
  extract 0 32
  store 255 // v236 :: Address
  load 3 // GV_svs :: Null
  extract 32 32
  store 254 // name/237 :: Bytes(32)
  load 3 // GV_svs :: Null
  extract 64 8
  store 253 // symbol/238 :: Bytes(8)
  load 3 // GV_svs :: Null
  int 72
  extract_uint64
  store 252 // supply/241 :: UInt
  load 3 // GV_svs :: Null
  int 80
  extract_uint64
  store 251 // v251 :: Token
  load 3 // GV_svs :: Null
  extract 88 32
  store 250 // v254 :: Address
  load 3 // GV_svs :: Null
  int 120
  extract_uint64
  store 249 // v265 :: UInt
  byte base64(kSc08w==)
  log // up to 4 bytes
  // ^ CheckPay
  // at ./index.rsh:51:5:dot

    // { l15_checkTxnK
    load 249 // v265 :: UInt
    dup
    bz l15_checkTxnK
    load 0 // GV_txnCounter :: UInt
    dup
    int 1
    +
    store 0 // GV_txnCounter :: UInt
    swap
    dig 1
    gtxns AssetAmount
    ==
    assert
    load 251 // v251 :: Token
    dig 1
    gtxns XferAsset
    ==
    assert
    int axfer
    dig 1
    gtxns TypeEnum
    ==
    assert
    global CurrentApplicationAddress
    dig 1
    gtxns AssetReceiver
    ==
    assert
    l15_checkTxnK:
    pop
    // l15_checkTxnK }

  // ^ CheckPay
  // at ./index.rsh:51:5:dot
  load 255 // v236 :: Address
  txn Sender
  ==
  assert
  // ^ Claim: sender correct
  // at ./index.rsh:51:5:dot
  load 255 // v236 :: Address
  load 254 // name/237 :: Bytes(32)
  concat
  load 253 // symbol/238 :: Bytes(8)
  concat
  load 252 // supply/241 :: UInt
  itob
  concat
  load 251 // v251 :: Token
  itob
  concat
  load 250 // v254 :: Address
  concat
  load 249 // v265 :: UInt
  itob
  concat
  byte base64(AA==)
  dig 1
  extract 0 127
  app_global_put
  byte base64(AQ==)
  dig 1
  extract 127 1
  app_global_put
  pop
  int 5
  store 1 // GV_currentStep :: UInt
  global Round
  store 2 // GV_currentTime :: UInt
  txn OnCompletion
  int NoOp
  ==
  assert
  b updateState
  // publish4 }

l14_publish_lt_4:
pop

  // { publish3
  publish3:
  // check step
  int 3
  load 1 // GV_currentStep :: UInt
  ==
  assert
  // check time
  load 4 // GV_argTime :: UInt
  dup
  int 0
  ==
  swap
  load 2 // GV_currentTime :: UInt
  ==
  ||
  assert
  byte base64(AA==)
  app_global_get
  byte base64(AQ==)
  app_global_get
  concat
  dup
  store 3 // GV_svs :: Null
  extract 0 32
  store 255 // v236 :: Address
  load 3 // GV_svs :: Null
  extract 32 32
  store 254 // name/237 :: Bytes(32)
  load 3 // GV_svs :: Null
  extract 64 8
  store 253 // symbol/238 :: Bytes(8)
  load 3 // GV_svs :: Null
  int 72
  extract_uint64
  store 252 // supply/241 :: UInt
  load 3 // GV_svs :: Null
  int 80
  extract_uint64
  store 251 // v251 :: Token
  load 3 // GV_svs :: Null
  extract 88 32
  store 250 // v254 :: Address
  load 3 // GV_svs :: Null
  int 120
  extract_uint64
  store 249 // v265 :: UInt
  byte base64(p2XEtA==)
  log // up to 4 bytes
  // ^ CheckPay
  // at ./index.rsh:48:5:dot
  load 255 // v236 :: Address
  txn Sender
  ==
  assert
  // ^ Claim: sender correct
  // at ./index.rsh:48:5:dot

    // { l16_makeTxnK
    load 249 // v265 :: UInt
    dup
    bz l16_makeTxnK
    itxn_begin
    itxn_field AssetAmount
    int axfer
    itxn_field TypeEnum
    load 255 // v236 :: Address
    itxn_field AssetReceiver
    load 251 // v251 :: Token
    itxn_field XferAsset
    itxn_submit
    int 0
    l16_makeTxnK:
    pop
    // l16_makeTxnK }

  load 255 // v236 :: Address
  load 254 // name/237 :: Bytes(32)
  concat
  load 253 // symbol/238 :: Bytes(8)
  concat
  load 252 // supply/241 :: UInt
  itob
  concat
  load 251 // v251 :: Token
  itob
  concat
  load 250 // v254 :: Address
  concat
  load 249 // v265 :: UInt
  itob
  concat
  byte base64(AA==)
  dig 1
  extract 0 127
  app_global_put
  byte base64(AQ==)
  dig 1
  extract 127 1
  app_global_put
  pop
  int 4
  store 1 // GV_currentStep :: UInt
  global Round
  store 2 // GV_currentTime :: UInt
  txn OnCompletion
  int NoOp
  ==
  assert
  b updateState
  // publish3 }

l13_publish_lt_3:
pop

  // { publish2
  publish2:
  // check step
  int 2
  load 1 // GV_currentStep :: UInt
  ==
  assert
  // check time
  load 4 // GV_argTime :: UInt
  dup
  int 0
  ==
  swap
  load 2 // GV_currentTime :: UInt
  ==
  ||
  assert
  byte base64(AA==)
  app_global_get
  byte base64(AQ==)
  app_global_get
  concat
  dup
  store 3 // GV_svs :: Null
  extract 0 32
  store 255 // v236 :: Address
  load 3 // GV_svs :: Null
  extract 32 32
  store 254 // name/237 :: Bytes(32)
  load 3 // GV_svs :: Null
  extract 64 8
  store 253 // symbol/238 :: Bytes(8)
  load 3 // GV_svs :: Null
  int 72
  extract_uint64
  store 252 // supply/241 :: UInt
  load 3 // GV_svs :: Null
  int 88
  extract_uint64
  store 251 // v251 :: Token
  load 3 // GV_svs :: Null
  extract 96 32
  store 250 // v254 :: Address
  byte base64(QbFATQ==)
  log // up to 4 bytes
  // ^ CheckPay
  // at ./index.rsh:45:5:dot
  load 250 // v254 :: Address
  txn Sender
  ==
  assert
  // ^ Claim: sender correct
  // at ./index.rsh:45:5:dot
  int 2
  load 3 // GV_svs :: Null
  int 80
  extract_uint64
  *
  store 249 // v265 :: UInt

    // { l17_makeTxnK
    load 249 // v265 :: UInt
    dup
    bz l17_makeTxnK
    itxn_begin
    itxn_field AssetAmount
    int axfer
    itxn_field TypeEnum
    load 250 // v254 :: Address
    itxn_field AssetReceiver
    load 251 // v251 :: Token
    itxn_field XferAsset
    itxn_submit
    int 0
    l17_makeTxnK:
    pop
    // l17_makeTxnK }

  load 255 // v236 :: Address
  load 254 // name/237 :: Bytes(32)
  concat
  load 253 // symbol/238 :: Bytes(8)
  concat
  load 252 // supply/241 :: UInt
  itob
  concat
  load 251 // v251 :: Token
  itob
  concat
  load 250 // v254 :: Address
  concat
  load 249 // v265 :: UInt
  itob
  concat
  byte base64(AA==)
  dig 1
  extract 0 127
  app_global_put
  byte base64(AQ==)
  dig 1
  extract 127 1
  app_global_put
  pop
  int 3
  store 1 // GV_currentStep :: UInt
  global Round
  store 2 // GV_currentTime :: UInt
  txn OnCompletion
  int NoOp
  ==
  assert
  b updateState
  // publish2 }

l12_publish_lt_2:
dup
int 1
<
bnz l18_publish_lt_1
pop

  // { publish1
  publish1:
  // check step
  int 1
  load 1 // GV_currentStep :: UInt
  ==
  assert
  // check time
  load 4 // GV_argTime :: UInt
  dup
  int 0
  ==
  swap
  load 2 // GV_currentTime :: UInt
  ==
  ||
  assert
  byte base64(AA==)
  app_global_get
  dup
  store 3 // GV_svs :: Null
  extract 0 32
  store 255 // v236 :: Address
  load 3 // GV_svs :: Null
  extract 32 32
  store 254 // name/237 :: Bytes(32)
  load 3 // GV_svs :: Null
  extract 64 8
  store 253 // symbol/238 :: Bytes(8)
  load 3 // GV_svs :: Null
  int 72
  extract_uint64
  store 252 // supply/241 :: UInt
  load 3 // GV_svs :: Null
  int 80
  extract_uint64
  store 251 // amt/242 :: UInt
  load 3 // GV_svs :: Null
  int 88
  extract_uint64
  store 250 // v251 :: Token
  byte base64(mouRdA==)
  log // up to 4 bytes
  // ^ CheckPay
  // at ./index.rsh:36:5:dot
  load 255 // v236 :: Address
  load 254 // name/237 :: Bytes(32)
  concat
  load 253 // symbol/238 :: Bytes(8)
  concat
  load 252 // supply/241 :: UInt
  itob
  concat
  load 251 // amt/242 :: UInt
  itob
  concat
  load 250 // v251 :: Token
  itob
  concat
  txn Sender
  concat
  byte base64(AA==)
  dig 1
  extract 0 127
  app_global_put
  byte base64(AQ==)
  dig 1
  extract 127 1
  app_global_put
  pop
  int 2
  store 1 // GV_currentStep :: UInt
  global Round
  store 2 // GV_currentTime :: UInt
  txn OnCompletion
  int NoOp
  ==
  assert
  b updateState
  // publish1 }

l18_publish_lt_1:
pop

  // { publish0
  publish0:
  // check step
  int 0
  load 1 // GV_currentStep :: UInt
  ==
  assert
  // check time
  load 4 // GV_argTime :: UInt
  dup
  int 0
  ==
  swap
  load 2 // GV_currentTime :: UInt
  ==
  ||
  assert
  load 5 // GV_argMsg :: Null
  extract 0 32
  store 255 // name/237 :: Bytes(32)
  load 5 // GV_argMsg :: Null
  extract 32 8
  store 254 // symbol/238 :: Bytes(8)
  load 5 // GV_argMsg :: Null
  extract 40 96
  store 253 // url/239 :: Bytes(96)
  load 5 // GV_argMsg :: Null
  extract 136 32
  store 252 // metadata/240 :: Bytes(32)
  load 5 // GV_argMsg :: Null
  int 168
  extract_uint64
  store 251 // supply/241 :: UInt
  load 5 // GV_argMsg :: Null
  int 176
  extract_uint64
  store 250 // amt/242 :: UInt
  byte base64(Sd/MaA==)
  load 255 // name/237 :: Bytes(32)
  concat
  load 254 // symbol/238 :: Bytes(8)
  concat
  load 253 // url/239 :: Bytes(96)
  concat
  load 252 // metadata/240 :: Bytes(32)
  concat
  load 251 // supply/241 :: UInt
  itob
  concat
  load 250 // amt/242 :: UInt
  itob
  concat
  log // up to 188 bytes

    // { l19_checkTxnK
    int 100000
    dup
    bz l19_checkTxnK
    load 0 // GV_txnCounter :: UInt
    dup
    int 1
    +
    store 0 // GV_txnCounter :: UInt
    swap
    dig 1
    gtxns Amount
    ==
    assert
    int pay
    dig 1
    gtxns TypeEnum
    ==
    assert
    global CurrentApplicationAddress
    dig 1
    gtxns Receiver
    ==
    assert
    l19_checkTxnK:
    pop
    // l19_checkTxnK }

  // ^ CheckPay
  // at ./index.rsh:27:5:dot
  // ^ CheckPay
  // at ./index.rsh:27:5:dot
  int 4
  load 250 // amt/242 :: UInt
  *
  dup
  store 249 // v246 :: UInt
  load 251 // supply/241 :: UInt
  <=
  assert
  // ^ Claim
  // at ./index.rsh:28:10:application
  load 249 // v246 :: UInt
  int 18446744073709551615
  <=
  assert
  // ^ Claim
  // at ./index.rsh:29:10:application

    // { TokenNew

      // { l20_checkTxnK
      int 100000
      dup
      bz l20_checkTxnK
      load 0 // GV_txnCounter :: UInt
      dup
      int 1
      +
      store 0 // GV_txnCounter :: UInt
      swap
      dig 1
      gtxns Amount
      ==
      assert
      int pay
      dig 1
      gtxns TypeEnum
      ==
      assert
      global CurrentApplicationAddress
      dig 1
      gtxns Receiver
      ==
      assert
      l20_checkTxnK:
      pop
      // l20_checkTxnK }

    itxn_begin
    int acfg
    itxn_field TypeEnum
    load 251 // supply/241 :: UInt
    itxn_field ConfigAssetTotal
    int 6
    itxn_field ConfigAssetDecimals
    load 254 // symbol/238 :: Bytes(8)
    itxn_field ConfigAssetUnitName
    load 255 // name/237 :: Bytes(32)
    itxn_field ConfigAssetName
    load 253 // url/239 :: Bytes(96)
    itxn_field ConfigAssetURL
    load 252 // metadata/240 :: Bytes(32)
    itxn_field ConfigAssetMetadataHash
    global CurrentApplicationAddress
    itxn_field ConfigAssetManager
    itxn_submit
    itxn CreatedAssetID
    // TokenNew }

  store 248 // v250 :: Token
  byte base64(AAAAAAAAAPo=)
  load 248 // v250 :: Token
  itob
  concat
  log // up to 16 bytes
  load 248 // v250 :: Token
  store 247 // v251 :: Token
  txn Sender
  load 255 // name/237 :: Bytes(32)
  concat
  load 254 // symbol/238 :: Bytes(8)
  concat
  load 251 // supply/241 :: UInt
  itob
  concat
  load 250 // amt/242 :: UInt
  itob
  concat
  load 247 // v251 :: Token
  itob
  concat
  byte base64(AA==)
  dig 1
  extract 0 96
  app_global_put
  pop
  int 1
  store 1 // GV_currentStep :: UInt
  global Round
  store 2 // GV_currentTime :: UInt
  txn OnCompletion
  int NoOp
  ==
  assert
  b updateState
  // publish0 }

updateState:
byte base64()
load 1 // GV_currentStep :: UInt
itob
load 2 // GV_currentTime :: UInt
itob
concat
app_global_put
load 6 // GV_wasMeth :: Bool
bz checkSize
apiReturn:
byte base64(FR98dQ==)
load 7 // GV_apiRet :: Null
concat
log // up to 4 bytes
checkSize:
load 0 // GV_txnCounter :: UInt
dup
int 1
+
global GroupSize
==
assert
txn GroupIndex
==
assert
done:
int 1
return
alloc:
txn OnCompletion
int NoOp
==
assert
int 0
store 1 // GV_currentStep :: UInt
int 0
store 2 // GV_currentTime :: UInt
b updateState
