version: '3.4'
x-server-base: &server-base
  image: reachsh/rpc-server:latest
  volumes:
    - ./server/build:/app/build
    - ./server/tls:/app/tls
x-client-env: &client-env
  environment:
    - REACH_DEBUG
    - REACH_RPC_SERVER=host.docker.internal
    - REACH_RPC_PORT=3000
    - REACH_RPC_KEY
    - REACH_RPC_TLS_REJECT_UNVERIFIED=0
  extra_hosts:
    - 'host.docker.internal:172.17.0.1'
services:
  ethereum-devnet:
    image: reachsh/ethereum-devnet:0.1
  algorand-devnet:
    image: reachsh/algorand-devnet:0.1
    depends_on:
      - algorand-postgres-db
    environment:
      - REACH_DEBUG
      - POSTGRES_HOST=algorand-postgres-db
      - POSTGRES_USER=algogrand
      - POSTGRES_PASSWORD=indexer
      - POSTGRES_DB=pgdb
    ports:
      - 9392
  algorand-postgres-db:
    image: postgres:11-alpine
    environment:
      - POSTGRES_USER=algogrand
      - POSTGRES_PASSWORD=indexer
      - POSTGRES_DB=pgdb
  server-ETH: &default-server
    <<: *server-base
    depends_on:
      - ethereum-devnet
    environment:
      - REACH_DEBUG
      - REACH_RPC_PORT=3000
      - REACH_CONNECTOR_MODE=ETH-test-dockerized-geth
      - ETH_NODE_URI=http://ethereum-devnet:8545
      - REACH_RPC_KEY=INSERT-YOUR-OWN-PRESHARED-KEY
      - REACH_RPC_TLS_KEY=reach-server.key
      - REACH_RPC_TLS_CRT=reach-server.crt
      - REACH_RPC_TLS_PASSPHRASE=rpc-demo
  server-ALGO:
    <<: *server-base
    depends_on:
      - algorand-devnet
    environment:
      - REACH_DEBUG
      - REACH_RPC_PORT=3000
      - REACH_CONNECTOR_MODE=ALGO-test-dockerized-algod
      - ALGO_SERVER=http://algorand-devnet
      - ALGO_PORT=4180
      - ALGO_INDEXER_SERVER=http://algorand-devnet
      - ALGO_INDEXER_PORT=8980
      - REACH_RPC_KEY=INSERT-YOUR-OWN-PRESHARED-KEY
      - REACH_RPC_TLS_KEY=reach-app-tut-7-rpc-server.key
      - REACH_RPC_TLS_CRT=reach-app-tut-7-rpc-server.crt
      - REACH_RPC_TLS_PASSPHRASE=rpc-demo
  reach-app-tut-7-rpc-server:
    <<: *default-server
  client-js: &client-js
    image: reachsh/reach-app-tut-7-rpc-client-js:latest
  client-py: &client-py
    image: reachsh/reach-app-tut-7-rpc-client-py:latest
  client-go: &client-go
    image: reachsh/reach-app-tut-7-rpc-client-go:latest
  client: &client
    <<: *client-js
  reach-app-tut-7-rpc:
    <<: *client
    depends_on:
      - reach-app-tut-7-rpc-server
    environment:
      - REACH_RPC_SERVER=reach-app-tut-7-rpc-server
      - REACH_RPC_PORT=3000
      - REACH_RPC_KEY=INSERT-YOUR-OWN-PRESHARED-KEY

      # The following is highly insecure in Real Lifeâ„¢ applications and must
      # only be used under controlled conditions (such as during development)
      #   See:
      # https://nodejs.org/api/cli.html#cli_node_tls_reject_unauthorized_value
      # https://2.python-requests.org/en/master/user/advanced/#ssl-cert-verification
      # https://golang.org/pkg/crypto/tls/#Config
      - REACH_RPC_TLS_REJECT_UNVERIFIED=0 # Default "on"
  client-only:
    <<: *client
    <<: *client-env
  client-js-only:
    <<: *client-js
    <<: *client-env
  client-py-only:
    <<: *client-py
    <<: *client-env
  client-go-only:
    <<: *client-go
    <<: *client-env
