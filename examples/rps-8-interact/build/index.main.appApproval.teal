#pragma version 6
// resource: R_Txn
int 0
store 0 // GV_txnCounter :: UInt
txn ApplicationID
bz alloc
byte base64()
app_global_get
dup
int 0
extract_uint64
store 1 // GV_currentStep :: UInt
int 8
extract_uint64
store 2 // GV_currentTime :: UInt
txna ApplicationArgs 0
btoi
preamble:
dup
bz publish
api:
int 0
store 4 // GV_argTime :: UInt
int 1
store 6 // GV_wasMeth :: Bool
err
publish:
txna ApplicationArgs 2
btoi
store 4 // GV_argTime :: UInt
txna ApplicationArgs 3
txna ApplicationArgs 1
btoi
dup
int 5
<
bnz l0_publish_lt_5
dup
int 7
<
bnz l1_publish_lt_7
dup
int 8
<
bnz l2_publish_lt_8
dup
int 9
<
bnz l3_publish_lt_9
int 9
==
assert

  // { publish9
  publish9:
  // check step
  int 9
  load 1 // GV_currentStep :: UInt
  ==
  assert
  // check time
  load 4 // GV_argTime :: UInt
  dup
  int 0
  ==
  swap
  load 2 // GV_currentTime :: UInt
  ==
  ||
  assert
  byte base64(AA==)
  app_global_get
  byte base64(AQ==)
  app_global_get
  concat
  dup
  store 3 // GV_svs :: Null
  extract 48 32
  store 255 // Bob/321 :: Address
  byte base64(ogVmjg==)
  log // up to 4 bytes
  global Round
  load 3 // GV_svs :: Null
  int 128
  extract_uint64
  >=
  assert
  // ^ CheckPay
  // at reach standard library:189:11:dot
  // at ./examples/rps-8-interact/index.rsh:86:53:application call to "closeTo" (defined at: reach standard library:187:8:function exp)
  load 3 // GV_svs :: Null
  extract 0 32
  txn Sender
  ==
  load 255 // Bob/321 :: Address
  txn Sender
  ==
  ||
  assert
  // ^ Claim: sender correct
  // at reach standard library:189:11:dot
  // at ./examples/rps-8-interact/index.rsh:86:53:application call to "closeTo" (defined at: reach standard library:187:8:function exp)

    // { makeTxn
    itxn_begin
    int 0
    itxn_field Fee
    load 3 // GV_svs :: Null
    int 80
    extract_uint64
    itxn_field Amount
    int pay
    itxn_field TypeEnum
    // resource: R_Account
    load 255 // Bob/321 :: Address
    itxn_field Receiver
    itxn_submit
    // makeTxn }

  b updateStateHalt
  // publish9 }

l3_publish_lt_9:
pop

  // { publish8
  publish8:
  // check step
  int 9
  load 1 // GV_currentStep :: UInt
  ==
  assert
  // check time
  load 4 // GV_argTime :: UInt
  dup
  int 0
  ==
  swap
  load 2 // GV_currentTime :: UInt
  ==
  ||
  assert
  byte base64(AA==)
  app_global_get
  byte base64(AQ==)
  app_global_get
  concat
  dup
  store 3 // GV_svs :: Null
  extract 0 32
  store 255 // Alice/304 :: Address
  dup
  store 5 // GV_argMsg :: Null
  dup
  int 0
  extract_uint64
  store 254 // saltAlice/389 :: UInt
  int 8
  extract_uint64
  store 253 // handAlice/390 :: UInt
  byte base64(NRoq0A==)
  load 254 // saltAlice/389 :: UInt
  itob
  concat
  load 253 // handAlice/390 :: UInt
  itob
  concat
  log // up to 20 bytes
  global Round
  load 3 // GV_svs :: Null
  int 128
  extract_uint64
  <
  assert
  // ^ CheckPay
  // at ./examples/rps-8-interact/index.rsh:85:11:dot
  load 255 // Alice/304 :: Address
  txn Sender
  ==
  assert
  // ^ Claim: sender correct
  // at ./examples/rps-8-interact/index.rsh:85:11:dot
  load 3 // GV_svs :: Null
  extract 88 32
  load 254 // saltAlice/389 :: UInt
  itob
  load 253 // handAlice/390 :: UInt
  itob
  concat
  sha256
  ==
  assert
  // ^ Claim
  // at reach standard library:58:17:application
  // at ./examples/rps-8-interact/index.rsh:87:20:application call to "checkCommitment" (defined at: reach standard library:57:8:function exp)
  load 255 // Alice/304 :: Address
  load 3 // GV_svs :: Null
  int 32
  extract_uint64
  load 3 // GV_svs :: Null
  int 40
  extract_uint64
  load 3 // GV_svs :: Null
  extract 48 32
  load 253 // handAlice/390 :: UInt
  int 4
  load 3 // GV_svs :: Null
  int 120
  extract_uint64
  -
  +
  int 3
  %
  global Round
  load 3 // GV_svs :: Null
  int 80
  extract_uint64
  b loopBody3
  // publish8 }

l2_publish_lt_8:
pop

  // { publish7
  publish7:
  // check step
  int 7
  load 1 // GV_currentStep :: UInt
  ==
  assert
  // check time
  load 4 // GV_argTime :: UInt
  dup
  int 0
  ==
  swap
  load 2 // GV_currentTime :: UInt
  ==
  ||
  assert
  byte base64(AA==)
  app_global_get
  byte base64(AQ==)
  app_global_get
  concat
  dup
  store 3 // GV_svs :: Null
  extract 0 32
  store 255 // Alice/304 :: Address
  byte base64(4huzqQ==)
  log // up to 4 bytes
  global Round
  load 3 // GV_svs :: Null
  int 120
  extract_uint64
  >=
  assert
  // ^ CheckPay
  // at reach standard library:189:11:dot
  // at ./examples/rps-8-interact/index.rsh:78:53:application call to "closeTo" (defined at: reach standard library:187:8:function exp)
  load 255 // Alice/304 :: Address
  txn Sender
  ==
  load 3 // GV_svs :: Null
  extract 48 32
  txn Sender
  ==
  ||
  assert
  // ^ Claim: sender correct
  // at reach standard library:189:11:dot
  // at ./examples/rps-8-interact/index.rsh:78:53:application call to "closeTo" (defined at: reach standard library:187:8:function exp)

    // { makeTxn
    itxn_begin
    int 0
    itxn_field Fee
    load 3 // GV_svs :: Null
    int 80
    extract_uint64
    itxn_field Amount
    int pay
    itxn_field TypeEnum
    // resource: R_Account
    load 255 // Alice/304 :: Address
    itxn_field Receiver
    itxn_submit
    // makeTxn }

  b updateStateHalt
  // publish7 }

l1_publish_lt_7:
dup
int 6
<
bnz l4_publish_lt_6
pop

  // { publish6
  publish6:
  // check step
  int 7
  load 1 // GV_currentStep :: UInt
  ==
  assert
  // check time
  load 4 // GV_argTime :: UInt
  dup
  int 0
  ==
  swap
  load 2 // GV_currentTime :: UInt
  ==
  ||
  assert
  byte base64(AA==)
  app_global_get
  byte base64(AQ==)
  app_global_get
  concat
  dup
  store 3 // GV_svs :: Null
  dup
  dup2
  dup2
  extract 0 32
  store 255 // Alice/304 :: Address
  int 32
  extract_uint64
  store 254 // wager/305 :: UInt
  int 40
  extract_uint64
  store 253 // deadline/306 :: UInt
  extract 48 32
  store 252 // Bob/321 :: Address
  int 80
  extract_uint64
  store 251 // netBalance/334 :: UInt
  extract 88 32
  store 250 // commitAlice/358 :: Digest
  dup
  store 5 // GV_argMsg :: Null
  btoi
  store 249 // handBob/374 :: UInt
  byte base64(cO3veg==)
  load 249 // handBob/374 :: UInt
  itob
  concat
  log // up to 12 bytes
  global Round
  load 3 // GV_svs :: Null
  int 120
  extract_uint64
  <
  assert
  // ^ CheckPay
  // at ./examples/rps-8-interact/index.rsh:77:9:dot
  load 252 // Bob/321 :: Address
  txn Sender
  ==
  assert
  // ^ Claim: sender correct
  // at ./examples/rps-8-interact/index.rsh:77:9:dot
  global Round
  load 253 // deadline/306 :: UInt
  +
  store 248 // v384 :: UInt
  load 255 // Alice/304 :: Address
  load 254 // wager/305 :: UInt
  itob
  concat
  load 253 // deadline/306 :: UInt
  itob
  concat
  load 252 // Bob/321 :: Address
  concat
  load 251 // netBalance/334 :: UInt
  itob
  concat
  load 250 // commitAlice/358 :: Digest
  concat
  load 249 // handBob/374 :: UInt
  itob
  concat
  load 248 // v384 :: UInt
  itob
  concat
  byte base64(AA==)
  dig 1
  extract 0 127
  app_global_put
  byte base64(AQ==)
  dig 1
  extract 127 9
  app_global_put
  pop
  int 9
  store 1 // GV_currentStep :: UInt
  global Round
  store 2 // GV_currentTime :: UInt
  b updateStateNoOp
  // publish6 }

l4_publish_lt_6:
pop

  // { publish5
  publish5:
  // check step
  int 5
  load 1 // GV_currentStep :: UInt
  ==
  assert
  // check time
  load 4 // GV_argTime :: UInt
  dup
  int 0
  ==
  swap
  load 2 // GV_currentTime :: UInt
  ==
  ||
  assert
  byte base64(AA==)
  app_global_get
  dup
  store 3 // GV_svs :: Null
  extract 48 32
  store 255 // Bob/321 :: Address
  byte base64(zJmSXA==)
  log // up to 4 bytes
  global Round
  load 3 // GV_svs :: Null
  int 88
  extract_uint64
  >=
  assert
  // ^ CheckPay
  // at reach standard library:189:11:dot
  // at ./examples/rps-8-interact/index.rsh:70:53:application call to "closeTo" (defined at: reach standard library:187:8:function exp)
  load 3 // GV_svs :: Null
  extract 0 32
  txn Sender
  ==
  load 255 // Bob/321 :: Address
  txn Sender
  ==
  ||
  assert
  // ^ Claim: sender correct
  // at reach standard library:189:11:dot
  // at ./examples/rps-8-interact/index.rsh:70:53:application call to "closeTo" (defined at: reach standard library:187:8:function exp)

    // { makeTxn
    itxn_begin
    int 0
    itxn_field Fee
    load 3 // GV_svs :: Null
    int 80
    extract_uint64
    itxn_field Amount
    int pay
    itxn_field TypeEnum
    // resource: R_Account
    load 255 // Bob/321 :: Address
    itxn_field Receiver
    itxn_submit
    // makeTxn }

  b updateStateHalt
  // publish5 }

l0_publish_lt_5:
dup
int 2
<
bnz l5_publish_lt_2
dup
int 4
<
bnz l6_publish_lt_4
pop

  // { publish4
  publish4:
  // check step
  int 5
  load 1 // GV_currentStep :: UInt
  ==
  assert
  // check time
  load 4 // GV_argTime :: UInt
  dup
  int 0
  ==
  swap
  load 2 // GV_currentTime :: UInt
  ==
  ||
  assert
  byte base64(AA==)
  app_global_get
  dup
  store 3 // GV_svs :: Null
  dup
  dup2
  dup
  extract 0 32
  store 255 // Alice/304 :: Address
  int 32
  extract_uint64
  store 254 // wager/305 :: UInt
  int 40
  extract_uint64
  store 253 // deadline/306 :: UInt
  extract 48 32
  store 252 // Bob/321 :: Address
  int 80
  extract_uint64
  store 251 // netBalance/334 :: UInt
  dup
  store 5 // GV_argMsg :: Null
  store 250 // commitAlice/358 :: Digest
  byte base64(OLAjLQ==)
  load 250 // commitAlice/358 :: Digest
  concat
  log // up to 36 bytes
  global Round
  load 3 // GV_svs :: Null
  int 88
  extract_uint64
  <
  assert
  // ^ CheckPay
  // at ./examples/rps-8-interact/index.rsh:69:11:dot
  load 255 // Alice/304 :: Address
  txn Sender
  ==
  assert
  // ^ Claim: sender correct
  // at ./examples/rps-8-interact/index.rsh:69:11:dot
  global Round
  load 253 // deadline/306 :: UInt
  +
  store 249 // v368 :: UInt
  load 255 // Alice/304 :: Address
  load 254 // wager/305 :: UInt
  itob
  concat
  load 253 // deadline/306 :: UInt
  itob
  concat
  load 252 // Bob/321 :: Address
  concat
  load 251 // netBalance/334 :: UInt
  itob
  concat
  load 250 // commitAlice/358 :: Digest
  concat
  load 249 // v368 :: UInt
  itob
  concat
  byte base64(AA==)
  dig 1
  extract 0 127
  app_global_put
  byte base64(AQ==)
  dig 1
  extract 127 1
  app_global_put
  pop
  int 7
  store 1 // GV_currentStep :: UInt
  global Round
  store 2 // GV_currentTime :: UInt
  b updateStateNoOp
  // publish4 }

l6_publish_lt_4:
int 2
==
assert

  // { publish2
  publish2:
  // check step
  int 1
  load 1 // GV_currentStep :: UInt
  ==
  assert
  // check time
  load 4 // GV_argTime :: UInt
  dup
  int 0
  ==
  swap
  load 2 // GV_currentTime :: UInt
  ==
  ||
  assert
  byte base64(AA==)
  app_global_get
  store 3 // GV_svs :: Null
  byte base64(QbFATQ==)
  log // up to 4 bytes
  global Round
  load 3 // GV_svs :: Null
  int 48
  extract_uint64
  >=
  assert
  // ^ CheckPay
  // at reach standard library:189:11:dot
  // at ./examples/rps-8-interact/index.rsh:57:51:application call to "closeTo" (defined at: reach standard library:187:8:function exp)

    // { makeTxn
    itxn_begin
    int 0
    itxn_field Fee
    load 3 // GV_svs :: Null
    int 32
    extract_uint64
    itxn_field Amount
    int pay
    itxn_field TypeEnum
    // resource: R_Account
    load 3 // GV_svs :: Null
    extract 0 32
    itxn_field Receiver
    itxn_submit
    // makeTxn }

  b updateStateHalt
  // publish2 }

l5_publish_lt_2:
dup
int 1
<
bnz l7_publish_lt_1
pop

  // { publish1
  publish1:
  // check step
  int 1
  load 1 // GV_currentStep :: UInt
  ==
  assert
  // check time
  load 4 // GV_argTime :: UInt
  dup
  int 0
  ==
  swap
  load 2 // GV_currentTime :: UInt
  ==
  ||
  assert
  byte base64(AA==)
  app_global_get
  dup
  store 3 // GV_svs :: Null
  int 32
  extract_uint64
  store 255 // wager/305 :: UInt
  byte base64(mouRdA==)
  log // up to 4 bytes
  global Round
  load 3 // GV_svs :: Null
  int 48
  extract_uint64
  <
  assert

    // { checkTxn
    load 255 // wager/305 :: UInt
    callsub l8_LF_checkTxn_net
    // checkTxn }

  // ^ CheckPay
  // at ./examples/rps-8-interact/index.rsh:56:7:dot
  load 3 // GV_svs :: Null
  extract 0 32
  load 255 // wager/305 :: UInt
  load 3 // GV_svs :: Null
  int 40
  extract_uint64
  txn Sender
  int 1
  global Round
  load 255 // wager/305 :: UInt
  dup
  +
  b loopBody3
  // publish1 }

l7_publish_lt_1:
pop

  // { publish0
  publish0:
  // check step
  int 0
  load 1 // GV_currentStep :: UInt
  ==
  assert
  // check time
  load 4 // GV_argTime :: UInt
  dup
  int 0
  ==
  swap
  load 2 // GV_currentTime :: UInt
  ==
  ||
  assert
  dup
  store 5 // GV_argMsg :: Null
  dup
  int 0
  extract_uint64
  store 255 // wager/305 :: UInt
  int 8
  extract_uint64
  store 254 // deadline/306 :: UInt
  byte base64(rNEfww==)
  load 255 // wager/305 :: UInt
  itob
  concat
  load 254 // deadline/306 :: UInt
  itob
  concat
  log // up to 20 bytes

    // { checkTxn
    int 100000
    callsub l8_LF_checkTxn_net
    // checkTxn }

  // ^ CheckPay
  // at ./examples/rps-8-interact/index.rsh:49:9:dot

    // { checkTxn
    load 255 // wager/305 :: UInt
    callsub l8_LF_checkTxn_net
    // checkTxn }

  // ^ CheckPay
  // at ./examples/rps-8-interact/index.rsh:49:9:dot
  global Round
  load 254 // deadline/306 :: UInt
  +
  store 253 // v317 :: UInt
  txn Sender
  load 255 // wager/305 :: UInt
  itob
  concat
  load 254 // deadline/306 :: UInt
  itob
  concat
  load 253 // v317 :: UInt
  itob
  concat
  byte base64(AA==)
  dig 1
  extract 0 56
  app_global_put
  pop
  int 1
  store 1 // GV_currentStep :: UInt
  global Round
  store 2 // GV_currentTime :: UInt
  b updateStateNoOp
  // publish0 }


  // { loopBody3
  loopBody3:
  store 255 // netBalance/334 :: UInt
  store 254 // thisConsensusTime/327 :: UInt
  store 253 // outcome/326 :: UInt
  store 252 // Bob/321 :: Address
  store 251 // deadline/306 :: UInt
  store 250 // wager/305 :: UInt
  store 249 // Alice/304 :: Address
  load 253 // outcome/326 :: UInt
  int 1
  ==
  bz l9_ifF
  load 254 // thisConsensusTime/327 :: UInt
  load 251 // deadline/306 :: UInt
  +
  store 248 // v349 :: UInt
  load 249 // Alice/304 :: Address
  load 250 // wager/305 :: UInt
  itob
  concat
  load 251 // deadline/306 :: UInt
  itob
  concat
  load 252 // Bob/321 :: Address
  concat
  load 255 // netBalance/334 :: UInt
  itob
  concat
  load 248 // v349 :: UInt
  itob
  concat
  byte base64(AA==)
  dig 1
  extract 0 96
  app_global_put
  pop
  int 5
  store 1 // GV_currentStep :: UInt
  global Round
  store 2 // GV_currentTime :: UInt
  b updateStateNoOp
  l9_ifF:

    // { makeTxn
    itxn_begin
    int 0
    itxn_field Fee
    int 2
    load 250 // wager/305 :: UInt
    *
    itxn_field Amount
    int pay
    itxn_field TypeEnum
    // resource: R_Account
    load 252 // Bob/321 :: Address
    load 249 // Alice/304 :: Address
    load 253 // outcome/326 :: UInt
    int 2
    ==
    select
    itxn_field Receiver
    itxn_submit
    // makeTxn }

  b updateStateHalt
  // loopBody3 }

updateStateHalt:
txn OnCompletion
int DeleteApplication
==
assert
// checked on completion

  // { makeTxn
  itxn_begin
  int 0
  itxn_field Fee
  int 0
  itxn_field Amount
  int pay
  itxn_field TypeEnum
  global CreatorAddress
  itxn_field CloseRemainderTo
  global CurrentApplicationAddress
  itxn_field Receiver
  itxn_submit
  // makeTxn }

b updateState
updateStateNoOp:
txn OnCompletion
int NoOp
==
assert
// checked on completion
updateState:
byte base64()
load 1 // GV_currentStep :: UInt
itob
load 2 // GV_currentTime :: UInt
itob
concat
app_global_put
load 6 // GV_wasMeth :: Bool
bz checkSize
apiReturn_noCheck:
byte base64(FR98dQ==)
load 7 // GV_apiRet :: Null
concat
log // up to 4 bytes
checkSize:
load 0 // GV_txnCounter :: UInt
dup
int 1
+
global GroupSize
==
assert
txn GroupIndex
==
assert
done:
int 1
return
apiReturn_check:
txn OnCompletion
int NoOp
==
assert
// checked on completion
b apiReturn_noCheck
alloc:
int 0
store 1 // GV_currentStep :: UInt
int 0
store 2 // GV_currentTime :: UInt
b updateStateNoOp
l8_LF_checkTxn_net:
// resource: R_Txn
load 0 // GV_txnCounter :: UInt
dup
dup2
int 1
+
store 0 // GV_txnCounter :: UInt
gtxns Receiver
global CurrentApplicationAddress
==
assert
gtxns TypeEnum
int pay
==
assert
gtxns Amount
==
assert
retsub
