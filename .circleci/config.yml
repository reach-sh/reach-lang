# Code generated by dhall-to-yaml.  DO NOT EDIT.
jobs:
  "abstract-simul":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean abstract-simul"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Clean abstract-simul"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build abstract-simul"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Rebuild abstract-simul"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run abstract-simul"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run abstract-simul with ETH"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run abstract-simul"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run abstract-simul with ALGO"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=CFX REACH_DEBUG=1 ./one.sh run abstract-simul"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run abstract-simul with CFX"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "algorand-placeholder":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean algorand-placeholder"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Clean algorand-placeholder"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build algorand-placeholder"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Rebuild algorand-placeholder"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run algorand-placeholder"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run algorand-placeholder with ETH"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run algorand-placeholder"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run algorand-placeholder with ALGO"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=CFX REACH_DEBUG=1 ./one.sh run algorand-placeholder"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run algorand-placeholder with CFX"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  argz:
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean argz"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Clean argz
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build argz"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Rebuild argz
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run argz"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Run argz with ETH
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run argz"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Run argz with ALGO
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=CFX REACH_DEBUG=1 ./one.sh run argz"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Run argz with CFX
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "atomic-swap":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean atomic-swap"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Clean atomic-swap"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build atomic-swap"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Rebuild atomic-swap"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run atomic-swap"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run atomic-swap with ETH"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run atomic-swap"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run atomic-swap with ALGO"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "atomic-swap-auction":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean atomic-swap-auction"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Clean atomic-swap-auction"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build atomic-swap-auction"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Rebuild atomic-swap-auction"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run atomic-swap-auction"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run atomic-swap-auction with ETH"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run atomic-swap-auction"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run atomic-swap-auction with ALGO"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "build-core":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: medium
    steps:
    - checkout
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "curl -sSLo ~/.local/bin/mo https://git.io/get-mo"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Install `mo`"
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSLo ~/.local/bin/solc \
            https://github.com/ethereum/solidity/releases/download/v0.8.2/solc-static-linux
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Install `solc`"
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSLo /tmp/z3.zip \
               https://github.com/Z3Prover/z3/releases/download/z3-4.8.10/z3-4.8.10-x64-ubuntu-18.04.zip \
            && unzip -p /tmp/z3.zip z3-4.8.10-x64-ubuntu-18.04/bin/z3 \
             | cat > ~/.local/bin/z3
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Install `z3`"
        no_output_timeout: 10m
    - run:
        command: |
          sudo apt update && sudo apt install \
            g++ \
            gcc \
            git \
            gnupg \
            libc6-dev \
            libffi-dev \
            libgmp-dev \
            libtinfo-dev \
            make \
            netbase \
            xz-utils \
            zlib1g-dev
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Install `stack` dependencies"
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://get.haskellstack.org/ | sh -s - -d ~/.local/bin
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Install `stack`"
        no_output_timeout: 10m
    - run:
        command: "chmod +x ~/.local/bin/*"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "chmod +x ~/.local/bin/*"
        no_output_timeout: 10m
    - run:
        command: "cd hs && make package.yaml"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Generate package.yaml
        no_output_timeout: 10m
    - run:
        command: |
            sudo sh -c 'echo "LC_ALL=en_US.UTF-8" >> /etc/environment \
                     && echo "en_US.UTF-8 UTF-8"  >> /etc/locale.gen \
                     && echo "LANG=en_US.UTF-8"    > /etc/locale.conf \
                     && locale-gen en_US.UTF-8'
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Reset locale
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-3-{{ checksum \"hs/stack.yaml\" }}-{{ checksum \"hs/package.yaml\" }}"
    - run:
        command: "cd hs && make hs-deps"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Install hs dependencies
        no_output_timeout: 10m
    - save_cache:
        key: "hs-3-{{ checksum \"hs/stack.yaml\" }}-{{ checksum \"hs/package.yaml\" }}"
        paths:
        - ~/.stack
        - "hs/.stack-work"
    - run:
        command: "cd hs && make hs-clean"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Clean hs
        no_output_timeout: 10m
    - run:
        command: "cd hs && make hs-build"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Build hs
        no_output_timeout: 10m
    - run:
        command: "cd hs && stack install"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Install `reachc`"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: "cd scripts/ethereum-devnet && make build"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Build ethereum-devnet"
        no_output_timeout: 10m
    - run:
        command: "cd js && make build"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Build js
        no_output_timeout: 10m
    - run:
        command: "cd js/stdlib && make check"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Check js/stdlib/package.json
        no_output_timeout: 10m
    - run:
        command: |
          mkdir -p /tmp/build-core/bin
          cp ~/.local/bin/* /tmp/build-core/bin
          docker save reachsh/runner:latest | gzip > /tmp/build-core/runner.tar.gz
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Stash `build-core` workspace artifacts"
        no_output_timeout: 10m
    - persist_to_workspace:
        paths:
        - runner.tar.gz
        - bin
        root: "/tmp/build-core"
    - run:
        command: |
          docker pull reachsh/algorand-devnet:0.1
          docker run \
            --entrypoint /bin/sh \
            reachsh/algorand-devnet:0.1 \
            -c 'echo $REACH_GIT_HASH'
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Pull algorand-devnet"
        no_output_timeout: 10m
    - run:
        command: |
          docker pull reachsh/devnet-cfx:0.1
          docker run \
            --entrypoint /bin/sh \
            reachsh/devnet-cfx:0.1 \
            -c 'echo $REACH_GIT_HASH'
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Pull devnet-cfx"
        no_output_timeout: 10m
    - run:
        command: "scripts/docker-check.sh || echo 'XXX allowed to fail'"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Is dockerhub up to date?"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "chicken-fork":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean chicken-fork"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Clean chicken-fork"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build chicken-fork"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Rebuild chicken-fork"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run chicken-fork"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run chicken-fork with ETH"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run chicken-fork"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run chicken-fork with ALGO"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=CFX REACH_DEBUG=1 ./one.sh run chicken-fork"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run chicken-fork with CFX"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "chicken-parallel":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean chicken-parallel"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Clean chicken-parallel"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build chicken-parallel"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Rebuild chicken-parallel"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run chicken-parallel"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run chicken-parallel with ETH"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run chicken-parallel"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run chicken-parallel with ALGO"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=CFX REACH_DEBUG=1 ./one.sh run chicken-parallel"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run chicken-parallel with CFX"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "chicken-race":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean chicken-race"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Clean chicken-race"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build chicken-race"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Rebuild chicken-race"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run chicken-race"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run chicken-race with ETH"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run chicken-race"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run chicken-race with ALGO"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=CFX REACH_DEBUG=1 ./one.sh run chicken-race"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run chicken-race with CFX"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "default-app":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean default-app"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Clean default-app"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build default-app"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Rebuild default-app"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run default-app"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run default-app with ETH"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run default-app"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run default-app with ALGO"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=CFX REACH_DEBUG=1 ./one.sh run default-app"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run default-app with CFX"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "docker-lint":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "hadolint/hadolint:v1.18.0-6-ga0d655d-alpine"
    resource_class: small
    steps:
    - checkout
    - run:
        command: apk add make bash curl jq
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Install dependencies
        no_output_timeout: 10m
    - run:
        command: "make docker-lint"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Run hadolint
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "docs-deploy":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "circleci/node:9.9.0"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/docs_workspace
    - run:
        command: |
          # sudo npm install -g --silent gh-pages@3.0.0
          # git config user.email "ci-build@reach.sh"
          # git config user.name "ci-build"
          git config user.email "devbot@reach.sh"
          git config user.name "reachdevbot"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Install and configure dependencies
        no_output_timeout: 10m
    - add_ssh_keys:
        fingerprints:
        - "83:23:9c:21:6a:74:61:48:20:da:a3:45:79:89:3e:86"
    - run:
        command: |
          git fetch origin gh-pages
          git checkout gh-pages
          git pull origin gh-pages
          git rm -r .
          cp -r /tmp/docs_workspace/docs/* .
          git add .
          # https://stackoverflow.com/questions/8123674/how-to-git-commit-nothing-without-an-error
          git diff-index --quiet HEAD || git commit -m "[ci skip] docs for $CIRCLE_SHA1"
          git push origin gh-pages
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Deploy docs to gh-pages branch"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "docs-render":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - run:
        command: |
          sudo add-apt-repository -y ppa:plt/racket \
            && sudo apt update \
            && sudo apt install -y --no-install-recommends \
              libcairo2 \
              libfontconfig1 \
              libjpeg62 \
              libpangocairo-1.0 \
              racket \
              python3-setuptools
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Install dependencies
        no_output_timeout: 10m
    - run:
        command: "cd pygments && sudo make install"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Install `pygments-reach`"
        no_output_timeout: 10m
    - run:
        command: "cd docs-src && make render"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Render docs
        no_output_timeout: 10m
    - store_artifacts:
        path: docs/
    - run:
        command: |
          mkdir -p /tmp/docs_workspace
          cp -r docs /tmp/docs_workspace/
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Copy docs to workspace
        no_output_timeout: 10m
    - persist_to_workspace:
        paths:
        - docs
        root: /tmp/docs_workspace
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  exports:
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean exports"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Clean exports
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build exports"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Rebuild exports
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run exports"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Run exports with ETH
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run exports"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Run exports with ALGO
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=CFX REACH_DEBUG=1 ./one.sh run exports"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Run exports with CFX
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  log:
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean log"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Clean log
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build log"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Rebuild log
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run log"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Run log with ETH
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run log"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Run log with ALGO
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=CFX REACH_DEBUG=1 ./one.sh run log"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Run log with CFX
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "many-args":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean many-args"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Clean many-args"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build many-args"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Rebuild many-args"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run many-args"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run many-args with ETH"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run many-args"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run many-args with ALGO"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=CFX REACH_DEBUG=1 ./one.sh run many-args"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run many-args with CFX"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "maybe-send":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean maybe-send"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Clean maybe-send"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build maybe-send"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Rebuild maybe-send"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run maybe-send"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run maybe-send with ETH"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run maybe-send"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run maybe-send with ALGO"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=CFX REACH_DEBUG=1 ./one.sh run maybe-send"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run maybe-send with CFX"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "multiple-pr-case":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean multiple-pr-case"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Clean multiple-pr-case"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build multiple-pr-case"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Rebuild multiple-pr-case"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run multiple-pr-case"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run multiple-pr-case with ETH"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run multiple-pr-case"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run multiple-pr-case with ALGO"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  multisig:
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean multisig"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Clean multisig
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build multisig"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Rebuild multisig
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run multisig"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Run multisig with ETH
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run multisig"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Run multisig with ALGO
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=CFX REACH_DEBUG=1 ./one.sh run multisig"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Run multisig with CFX
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "nft-auction":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean nft-auction"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Clean nft-auction"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build nft-auction"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Rebuild nft-auction"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run nft-auction"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run nft-auction with ETH"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "nft-dumb":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean nft-dumb"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Clean nft-dumb"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build nft-dumb"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Rebuild nft-dumb"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run nft-dumb"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run nft-dumb with ETH"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run nft-dumb"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run nft-dumb with ALGO"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  nim:
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean nim"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Clean nim
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build nim"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Rebuild nim
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run nim"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Run nim with ETH
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run nim"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Run nim with ALGO
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=CFX REACH_DEBUG=1 ./one.sh run nim"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Run nim with CFX
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "object-digest":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean object-digest"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Clean object-digest"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build object-digest"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Rebuild object-digest"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run object-digest"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run object-digest with ETH"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run object-digest"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run object-digest with ALGO"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=CFX REACH_DEBUG=1 ./one.sh run object-digest"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run object-digest with CFX"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  overview:
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean overview"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Clean overview
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build overview"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Rebuild overview
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run overview"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Run overview with ETH
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run overview"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Run overview with ALGO
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=CFX REACH_DEBUG=1 ./one.sh run overview"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Run overview with CFX
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "overview-more-deps":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean overview-more-deps"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Clean overview-more-deps"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build overview-more-deps"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Rebuild overview-more-deps"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run overview-more-deps"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run overview-more-deps with ETH"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run overview-more-deps"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run overview-more-deps with ALGO"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=CFX REACH_DEBUG=1 ./one.sh run overview-more-deps"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run overview-more-deps with CFX"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "overview-react":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean overview-react"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Clean overview-react"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build overview-react"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Rebuild overview-react"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run overview-react"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run overview-react with ETH"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run overview-react"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run overview-react with ALGO"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=CFX REACH_DEBUG=1 ./one.sh run overview-react"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run overview-react with CFX"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "own-addr":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean own-addr"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Clean own-addr"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build own-addr"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Rebuild own-addr"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run own-addr"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run own-addr with ETH"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run own-addr"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run own-addr with ALGO"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=CFX REACH_DEBUG=1 ./one.sh run own-addr"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run own-addr with CFX"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "popularity-contest":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean popularity-contest"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Clean popularity-contest"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build popularity-contest"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Rebuild popularity-contest"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run popularity-contest"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run popularity-contest with ETH"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run popularity-contest"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run popularity-contest with ALGO"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "pr202105-zet":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean pr202105-zet"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Clean pr202105-zet"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build pr202105-zet"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Rebuild pr202105-zet"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run pr202105-zet"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run pr202105-zet with ETH"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run pr202105-zet"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run pr202105-zet with ALGO"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=CFX REACH_DEBUG=1 ./one.sh run pr202105-zet"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run pr202105-zet with CFX"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  race:
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean race"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Clean race
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build race"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Rebuild race
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run race"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Run race with ETH
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run race"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Run race with ALGO
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=CFX REACH_DEBUG=1 ./one.sh run race"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Run race with CFX
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  raffle:
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean raffle"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Clean raffle
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build raffle"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Rebuild raffle
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run raffle"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Run raffle with ETH
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run raffle"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Run raffle with ALGO
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  remote:
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean remote"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Clean remote
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build remote"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Rebuild remote
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run remote"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Run remote with ETH
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run remote"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Run remote with ALGO
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "rent-seeking":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean rent-seeking"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Clean rent-seeking"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build rent-seeking"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Rebuild rent-seeking"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run rent-seeking"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run rent-seeking with ETH"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run rent-seeking"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run rent-seeking with ALGO"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  rental:
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean rental"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Clean rental
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build rental"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Rebuild rental
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run rental"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Run rental with ETH
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run rental"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Run rental with ALGO
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=CFX REACH_DEBUG=1 ./one.sh run rental"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Run rental with CFX
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "secured-loan":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean secured-loan"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Clean secured-loan"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build secured-loan"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Rebuild secured-loan"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run secured-loan"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run secured-loan with ETH"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run secured-loan"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run secured-loan with ALGO"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=CFX REACH_DEBUG=1 ./one.sh run secured-loan"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run secured-loan with CFX"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  shellcheck:
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - shellcheck/install
    - run:
        command: "make sh-lint"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Run shellcheck
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "test-hs":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: medium
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: |
          sudo apt update && sudo apt install \
            g++ \
            gcc \
            git \
            gnupg \
            libc6-dev \
            libffi-dev \
            libgmp-dev \
            libtinfo-dev \
            make \
            netbase \
            xz-utils \
            zlib1g-dev
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Install `stack` dependencies"
        no_output_timeout: 10m
    - run:
        command: "cd hs && make package.yaml"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Generate package.yaml
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-3-{{ checksum \"hs/stack.yaml\" }}-{{ checksum \"hs/package.yaml\" }}"
    - run:
        command: "cd hs && make hs-test-xml"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Test hs (xml)"
        no_output_timeout: 20m
    - store_test_results:
        path: "hs/test-reports"
    - run:
        command: "cd hs && make hs-check"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Check hs
        no_output_timeout: 10m
    - store_artifacts:
        path: hs/stan.html
    - run:
        command: "cd .circleci && make check"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Run dhallcheck
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "test-js":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd js/stdlib && make clean-test && sbin/test.sh"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Test js
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  timeoutception:
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean timeoutception"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Clean timeoutception
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build timeoutception"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Rebuild timeoutception
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run timeoutception"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Run timeoutception with ETH
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run timeoutception"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Run timeoutception with ALGO
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=CFX REACH_DEBUG=1 ./one.sh run timeoutception"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Run timeoutception with CFX
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  ttt:
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean ttt"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Clean ttt
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build ttt"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Rebuild ttt
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run ttt"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Run ttt with ETH
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run ttt"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Run ttt with ALGO
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "tut-2":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean tut-2"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Clean tut-2"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build tut-2"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Rebuild tut-2"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run tut-2"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run tut-2 with ETH"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run tut-2"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run tut-2 with ALGO"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=CFX REACH_DEBUG=1 ./one.sh run tut-2"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run tut-2 with CFX"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "tut-3":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean tut-3"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Clean tut-3"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build tut-3"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Rebuild tut-3"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run tut-3"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run tut-3 with ETH"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run tut-3"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run tut-3 with ALGO"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=CFX REACH_DEBUG=1 ./one.sh run tut-3"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run tut-3 with CFX"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "tut-4":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean tut-4"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Clean tut-4"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build tut-4"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Rebuild tut-4"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run tut-4"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run tut-4 with ETH"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run tut-4"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run tut-4 with ALGO"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=CFX REACH_DEBUG=1 ./one.sh run tut-4"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run tut-4 with CFX"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "tut-5":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean tut-5"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Clean tut-5"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build tut-5"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Rebuild tut-5"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run tut-5"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run tut-5 with ETH"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run tut-5"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run tut-5 with ALGO"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=CFX REACH_DEBUG=1 ./one.sh run tut-5"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run tut-5 with CFX"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "tut-5-attack":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean tut-5-attack"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Clean tut-5-attack"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build tut-5-attack"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Rebuild tut-5-attack"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run tut-5-attack"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run tut-5-attack with ETH"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run tut-5-attack"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run tut-5-attack with ALGO"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=CFX REACH_DEBUG=1 ./one.sh run tut-5-attack"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run tut-5-attack with CFX"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "tut-6":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean tut-6"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Clean tut-6"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build tut-6"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Rebuild tut-6"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run tut-6"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run tut-6 with ETH"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run tut-6"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run tut-6 with ALGO"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=CFX REACH_DEBUG=1 ./one.sh run tut-6"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run tut-6 with CFX"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "tut-7":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean tut-7"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Clean tut-7"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build tut-7"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Rebuild tut-7"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run tut-7"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run tut-7 with ETH"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run tut-7"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run tut-7 with ALGO"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=CFX REACH_DEBUG=1 ./one.sh run tut-7"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run tut-7 with CFX"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "tut-7-array":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean tut-7-array"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Clean tut-7-array"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build tut-7-array"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Rebuild tut-7-array"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run tut-7-array"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run tut-7-array with ETH"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run tut-7-array"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run tut-7-array with ALGO"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=CFX REACH_DEBUG=1 ./one.sh run tut-7-array"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run tut-7-array with CFX"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "tut-7-rpc":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean tut-7-rpc"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Clean tut-7-rpc"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build tut-7-rpc"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Rebuild tut-7-rpc"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "tut-9":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean tut-9"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Clean tut-9"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build tut-9"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Rebuild tut-9"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run tut-9"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run tut-9 with ETH"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run tut-9"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run tut-9 with ALGO"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=CFX REACH_DEBUG=1 ./one.sh run tut-9"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run tut-9 with CFX"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "variable-transfers":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean variable-transfers"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Clean variable-transfers"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build variable-transfers"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Rebuild variable-transfers"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run variable-transfers"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run variable-transfers with ETH"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run variable-transfers"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run variable-transfers with ALGO"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=CFX REACH_DEBUG=1 ./one.sh run variable-transfers"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run variable-transfers with CFX"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "view-bytes":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean view-bytes"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Clean view-bytes"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build view-bytes"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Rebuild view-bytes"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run view-bytes"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run view-bytes with ETH"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run view-bytes"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run view-bytes with ALGO"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "view-fun":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean view-fun"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Clean view-fun"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build view-fun"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Rebuild view-fun"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run view-fun"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run view-fun with ETH"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run view-fun"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run view-fun with ALGO"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "view-map":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean view-map"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Clean view-map"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build view-map"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Rebuild view-map"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run view-map"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run view-map with ETH"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run view-map"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run view-map with ALGO"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "view-maybe":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean view-maybe"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Clean view-maybe"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build view-maybe"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Rebuild view-maybe"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run view-maybe"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run view-maybe with ETH"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run view-maybe"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run view-maybe with ALGO"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "view-steps":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean view-steps"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Clean view-steps"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build view-steps"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Rebuild view-steps"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run view-steps"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run view-steps with ETH"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run view-steps"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run view-steps with ALGO"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "weird-swap":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean weird-swap"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Clean weird-swap"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build weird-swap"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Rebuild weird-swap"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run weird-swap"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run weird-swap with ETH"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run weird-swap"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run weird-swap with ALGO"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "workshop-fomo":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean workshop-fomo"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Clean workshop-fomo"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build workshop-fomo"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Rebuild workshop-fomo"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run workshop-fomo"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run workshop-fomo with ETH"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run workshop-fomo"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run workshop-fomo with ALGO"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "workshop-fomo-generalized":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean workshop-fomo-generalized"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Clean workshop-fomo-generalized"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build workshop-fomo-generalized"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Rebuild workshop-fomo-generalized"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run workshop-fomo-generalized"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run workshop-fomo-generalized with ETH"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "workshop-hash-lock":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean workshop-hash-lock"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Clean workshop-hash-lock"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build workshop-hash-lock"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Rebuild workshop-hash-lock"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run workshop-hash-lock"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run workshop-hash-lock with ETH"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run workshop-hash-lock"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run workshop-hash-lock with ALGO"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=CFX REACH_DEBUG=1 ./one.sh run workshop-hash-lock"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run workshop-hash-lock with CFX"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "workshop-relay":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean workshop-relay"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Clean workshop-relay"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build workshop-relay"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Rebuild workshop-relay"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run workshop-relay"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run workshop-relay with ETH"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run workshop-relay"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run workshop-relay with ALGO"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=CFX REACH_DEBUG=1 ./one.sh run workshop-relay"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run workshop-relay with CFX"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "workshop-trust-fund":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    resource_class: small
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - run:
        command: "mkdir -p ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: "cp /tmp/build-core/bin/* ~/.local/bin"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "cp /tmp/build-core/bin/* ~/.local/bin"
        no_output_timeout: 10m
    - setup_remote_docker:
        docker_layer_caching: false
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        environment:
          LC_ALL: "en_US.UTF-8"
        name: Attach runner image
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh clean workshop-trust-fund"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Clean workshop-trust-fund"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build workshop-trust-fund"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Rebuild workshop-trust-fund"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ETH REACH_DEBUG=1 ./one.sh run workshop-trust-fund"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run workshop-trust-fund with ETH"
        no_output_timeout: 10m
    - run:
        command: "cd examples && REACH_CONNECTOR_MODE=ALGO REACH_DEBUG=1 ./one.sh run workshop-trust-fund"
        environment:
          LC_ALL: "en_US.UTF-8"
        name: "Run workshop-trust-fund with ALGO"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
orbs:
  jq: "circleci/jq@2.2.0"
  shellcheck: "circleci/shellcheck@2.2.0"
  slack: "circleci/slack@4.3.3"
version: 2.1
workflows:
  "build-and-test":
    jobs:
    - "build-core":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
    - "test-hs":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "test-js":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "abstract-simul":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "algorand-placeholder":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - argz:
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "atomic-swap":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "atomic-swap-auction":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "chicken-fork":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "chicken-parallel":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "chicken-race":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "default-app":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - exports:
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - log:
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "many-args":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "maybe-send":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "multiple-pr-case":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - multisig:
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "nft-auction":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "nft-dumb":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - nim:
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "object-digest":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - overview:
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "overview-more-deps":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "overview-react":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "own-addr":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "popularity-contest":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "pr202105-zet":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - race:
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - raffle:
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - remote:
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "rent-seeking":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - rental:
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "secured-loan":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - timeoutception:
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - ttt:
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "tut-2":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "tut-3":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "tut-4":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "tut-5":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "tut-5-attack":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "tut-6":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "tut-7":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "tut-7-array":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "tut-7-rpc":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "tut-9":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "variable-transfers":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "view-bytes":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "view-fun":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "view-map":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "view-maybe":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "view-steps":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "weird-swap":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "workshop-fomo":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "workshop-fomo-generalized":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "workshop-hash-lock":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "workshop-relay":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "workshop-trust-fund":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
  docs:
    jobs:
    - "docs-render":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
    - "docs-deploy":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        filters:
          branches:
            only: master
        requires:
        - "docs-render"
  lint:
    jobs:
    - shellcheck:
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"

