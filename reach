#!/bin/sh

IMG='reachsh/reach-cli:latest'
TMP=$(mktemp -d "/tmp/reach.$(date -u '+%Y-%m-%dT%H-%M-%SZ')-XXXX")
export TMP

run_d () {
  export REACH_DIR_EMBED="${REACH_DIR_EMBED:-"$(cd "$(dirname "$0")" && pwd)/hs/app/reach/embed"}"
  export REACH_STACK_YAML="${REACH_STACK_YAML:-"$(cd "$(dirname "$0")" && pwd)/hs/stack.yaml"}"

  if  [ "$REACH_DOCKER" = "0"  ] \
   && [ -d "$REACH_DIR_EMBED"  ] \
   && [ -f "$REACH_STACK_YAML" ] \
   && which stack >/dev/null 2>&1; then
    export STACK_YAML="$REACH_STACK_YAML"
    # shellcheck disable=2086
    REACH_EX="$0" $(stack build --fast 1>&2 && stack exec -- which reach 2>/dev/null) \
      --dir-embed="$REACH_DIR_EMBED" \
      --dir-project-container="$(pwd)" \
      --dir-project-host="$(pwd)" \
      --dir-tmp-container="$TMP" \
      --dir-tmp-host="$TMP" \
      $CFC "$@"
  else
    # shellcheck disable=2086
    docker run -t --rm \
      -e "REACH_EX=$0" \
      -e "REACH_CONFIG_SKIP" \
      -e "REACH_CONNECTOR_MODE" \
      -e "REACH_DEBUG" \
      -e "REACH_RPC_KEY" \
      -e "REACH_RPC_PORT"  \
      -e "REACH_RPC_SERVER" \
      -e "REACH_RPC_TLS_CRT" \
      -e "REACH_RPC_TLS_KEY" \
      -e "REACH_RPC_TLS_PASSPHRASE" \
      -e "REACH_RPC_TLS_REJECT_UNVERIFIED" \
      -e "REACH_VERSION" \
      -u "$(id -ru):$(id -rg)" \
      -v "$TMP:/app/tmp" \
      -v "$(pwd):/app/src" \
      "$IMG" --dir-project-host="$(pwd)" --dir-tmp-host="$TMP" $CFC "$@"
  fi
}

run_s () {
  chmod 700 "$TMP/out.sh"
  sh -ac "$TMP/out.sh" "$0"
}

run_d_s () { run_d "$@"; [ $? -eq 42 ] && run_s; }

for DEP in make curl base64 docker docker-compose; do
  if ! (which "${DEP}" >/dev/null 2>&1); then
    echo "Reach relies on an installation of ${DEP}"
    exit 1
  fi
done

if [ ! "$CIRCLECI" = "true" ] && [ "$(docker image ls -q $IMG)" = '' ]; then
  if ! docker pull "$IMG"; then exit 1; fi
  if [ "$REACH_CONFIG_SKIP" = 1 ] && ! run_d_s update; then exit 1; fi
fi

if [ ! "$REACH_CONFIG_SKIP" = 1 ]; then
  f () {
    while [ "$1" != "" ]; do
      A="$(echo "$1" | awk -F= '{print $1}')"
      V="$(echo "$1" | awk -F= '{print $2}')"
      case $A in
        -c | --config)
          case $V in
            '') export CF="$2"; return ;; # e.g. --config ~/.foo/bar.yaml
             *) export CF="$V"; return ;; # e.g. --config=~/.foo/bar.yaml
          esac
          ;;
        *) shift ;;
      esac
    done

    export CF="${XDG_CONFIG_HOME:-$HOME/.config}/reach/config.yaml"
  }
  g () { CFC="--config-contents=$(printf ''\''%s'\''' "$(base64 "$CF" | tr -d '\n')")" && export CFC; }
  f "$@"

  if [ -f "$CF" ]; then
    g
  else
    (run_d_s -c "$CF" config-create && [ -f "$CF" ] && g && run_d_s -c "$CF" update) || :
  fi
fi

run_d "$@"
case "$?" in
  42) run_s && rm -r "$TMP" ;;
  50) curl https://docs.reach.sh/reach -o "$0" && chmod +x "$0" && rm -r "$TMP" && exit 0 ;;
   0) rm -r "$TMP" ;;
   *) [ -z "$(ls -A "$TMP")" ] && rm -r "$TMP"; exit 1 ;;
esac
