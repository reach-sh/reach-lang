Verifying knowledge assertions
Verifying for generic connector
  Verifying when ALL participants are honest
Verification failed:
  when ALL participants are honest
  of theorem: while invariant after loop
  msg: "bene is 10"
  at ./pr1297.rsh:14:16:invariant

  // Violation Witness

  const UInt.max = 11;

  const map0_2/148 = <fresh Map>;
  //    ^ could = <map: (None(null ))>[<abstract address 0> <- Some(10 )]
  //      from: ./pr1297.rsh:13:34:while
  const .api24.dom/114 = protect<Tuple(UInt)>("f".interact.in());
  //    ^ could = [11 ]
  //      from: ./pr1297.rsh:1:23:application
  const this/121 = <an honest join from "f">;
  //    ^ could = <abstract address 0>
  //      from: ./pr1297.rsh:13:34:dot

  // Theorem Formalization

  const map0_1/147 = new Map()[<abstract address 0> <- Some 10];
  //    ^ would be <map: (None(null ))>[<abstract address 0> <- Some(10 )]
  const map0_3/154 = map0_2/148[this/121 <- Some .api24.dom/114[0]];
  //    ^ would be <map: (None(null ))>[<abstract address 0> <- Some(11 )]
  const v162 = fromSome(map0_3/154[<abstract address 0>], 0 ) == 10;
  //    ^ would be false
  assert(v162);

  Verifying when NO participants are honest
Verification failed:
  when NO participants are honest
  of theorem: while invariant after loop
  msg: "bene is 10"
  at ./pr1297.rsh:14:16:invariant

  // Violation Witness

  const UInt.max = 11;

  const A/98 = <a publication>;
  //    ^ could = <abstract address 0>
  //      from: ./pr1297.rsh:8:5:dot
  const map0_2/178 = <fresh Map>;
  //    ^ could = <map: (None(null ))>[<abstract address 0> <- Some(10 )]
  //      from: ./pr1297.rsh:13:34:while
  const this/121 = <a join by a class member of "f">;
  //    ^ could = <abstract address 0>
  //      from: ./pr1297.rsh:13:34:dot
  const .fork37.msg/122 = <a publication>;
  //    ^ could = [11 ]
  //      from: ./pr1297.rsh:13:34:dot

  // Theorem Formalization

  const map0_1/177 = new Map()[A/98 <- Some 10];
  //    ^ would be <map: (None(null ))>[<abstract address 0> <- Some(10 )]
  const map0_3/184 = map0_2/178[this/121 <- Some .fork37.msg/122[0]];
  //    ^ would be <map: (None(null ))>[<abstract address 0> <- Some(11 )]
  const v192 = fromSome(map0_3/184[A/98], 0 ) == 10;
  //    ^ would be false
  assert(v192);

Checked 14 theorems; 2 failures :'(
