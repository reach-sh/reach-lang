Compiling `main`...
Verifying knowledge assertions
Verifying for generic connector
  Verifying when ALL participants are honest
Verification failed:
  when ALL participants are honest
  of theorem: require
  msg: "m[A] is Some(ap)"
  at ./map-dset.rsh:29:10:application

  // Violation Witness

  const UInt.max = 1;

  const a/73 = protect<UInt>("Alice".interact.get());
  //    ^ could = 0
  //      from: ./map-dset.rsh:16:51:application
  const b/81 = protect<UInt>("Bob".interact.get());
  //    ^ could = 1
  //      from: ./map-dset.rsh:21:51:application

  // Theorem Formalization

  const map0_1/114 = new Map()[<abstract address 0> <- Some a/73];
  //    ^ would be <map: (None(null ))>[<abstract address 0> <- Some(0 )]
  const map0_2/120 = map0_1/114[<abstract address 0> <- Some b/81];
  //    ^ would be <map: (None(null ))>[<abstract address 0> <- Some(1 )]
  const v98 = digest(map0_2/120[<abstract address 0>] ) == digest(<Some a/73> );
  //    ^ would be false
  require(v98);

  Verifying when NO participants are honest
Checked 10 theorems; 1 failures :'(

For a guide to understanding verification failures, see: https://docs.reach.sh/rsh/errors/#how-to-read-verification-failures
