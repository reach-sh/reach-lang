Verifying knowledge assertions
Verifying for generic connector
  Verifying when ALL participants are honest
Verification failed:
  when ALL participants are honest
  of theorem: while invariant after loop
  at ./loop_var_sub.rsh:13:7:invariant

  // Violation Witness

  const x/71 = <loop variable>;
  //    ^ could = [7719, false ]
  //      from: ./loop_var_sub.rsh:14:7:while
  const balances[1]/74 = <loop variable>;
  //    ^ could = array(Tuple(Data({"None": Null, "Some": Token}), UInt), [] )
  //      from: ./loop_var_sub.rsh:14:7:while

  // Theorem Formalization

  const v119 = Array.set(balances[1]/74, 0, [<None null>, (balances[1]/74[0][1] + 1) ] )[0][1] == [(x/71[0] + 2), x/71[1] ][0];
  //    ^ would be false
  assert(v119);

  Verifying when NO participants are honest
Verification failed:
  when NO participants are honest
  of theorem: while invariant after loop
  at ./loop_var_sub.rsh:13:7:invariant

  // Violation Witness

  const x/71 = <loop variable>;
  //    ^ could = [7719, false ]
  //      from: ./loop_var_sub.rsh:14:7:while
  const balances[1]/74 = <loop variable>;
  //    ^ could = array(Tuple(Data({"None": Null, "Some": Token}), UInt), [] )
  //      from: ./loop_var_sub.rsh:14:7:while

  // Theorem Formalization

  const v139 = Array.set(balances[1]/74, 0, [<None null>, (balances[1]/74[0][1] + 1) ] )[0][1] == [(x/71[0] + 2), x/71[1] ][0];
  //    ^ would be false
  assert(v139);

Checked 16 theorems; 2 failures :'(
