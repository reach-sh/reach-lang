Verifying knowledge assertions
Verifying for generic connector
  Verifying when ALL participants are honest
Verification failed:
  when ALL participants are honest
  of theorem: while invariant after loop
  at ./loop_var_sub.rsh:13:7:invariant

  // Violation Witness

  const x/56 = <loop variable>;
  //    ^ could = [0, false ]
  //      from: ./loop_var_sub.rsh:14:7:while
  const balance(0)/59 = <loop variable>;
  //    ^ could = 0
  //      from: ./loop_var_sub.rsh:14:7:while

  // Theorem Formalization

  const v92 = (balance(0)/59 + 1) == [(x/56[0] + 2), x/56[1] ][0];
  //    ^ would be false
  assert(v92);

  Verifying when NO participants are honest
Verification failed:
  when NO participants are honest
  of theorem: while invariant after loop
  at ./loop_var_sub.rsh:13:7:invariant

  // Violation Witness

  const x/56 = <loop variable>;
  //    ^ could = [0, false ]
  //      from: ./loop_var_sub.rsh:14:7:while
  const balance(0)/59 = <loop variable>;
  //    ^ could = 0
  //      from: ./loop_var_sub.rsh:14:7:while

  // Theorem Formalization

  const v110 = (balance(0)/59 + 1) == [(x/56[0] + 2), x/56[1] ][0];
  //    ^ would be false
  assert(v110);

Checked 12 theorems; 2 failures :'(
