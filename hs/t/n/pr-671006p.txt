Verifying knowledge assertions
Verifying for generic connector
  Verifying when ALL participants are honest
Verification failed:
  when ALL participants are honest
  of theorem: while invariant before loop
  at ./pr-671006p.rsh:52:5:invariant

  // Violation Witness

  const sum/32 = <loop variable>;
  //    ^ could = 0
  //      from: ./pr-671006p.rsh:31:37:while
  const balance(0)/167 = <loop variable>;
  //    ^ could = 0
  //      from: ./pr-671006p.rsh:31:37:while
  const v115 = <map reduction>;
  //    ^ could = 1
  //      from: reach standard library:146:18:application


  // Theorem Formalization

  const v120 = (balance(0)/167 == bal/32) ? (bal/32 == v115) : false;
  //    ^ would be false
  while invariant before loop(v120);

  Verifying when NO participants are honest
Verification failed:
  when NO participants are honest
  of theorem: while invariant before loop
  at ./pr-671006p.rsh:52:5:invariant

  (details omitted on repeat)
  Verifying when ONLY "Contributor" is honest
Verification failed:
  when ONLY "Contributor" is honest
  of theorem: while invariant before loop
  at ./pr-671006p.rsh:52:5:invariant

  (details omitted on repeat)
  Verifying when ONLY "Fundraiser" is honest
Verification failed:
  when ONLY "Fundraiser" is honest
  of theorem: while invariant before loop
  at ./pr-671006p.rsh:52:5:invariant

  (details omitted on repeat)
Checked 53 theorems; 4 failures. :'(
